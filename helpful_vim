" .helpful_vim
" Austin Burt
" austin@burt.us.com
" Date: 04/09/20
"
" Vim Commands, Mappings, Notes, and Regexes I've Found Useful 

From Useful Sites {{{1
    " VimCasts {{{2
        2: Tabs and Spaces {{{3}}}
            http://vimcasts.org/episodes/tabs-and-spaces/
        " }}}3
    " }}}2

" Making A List Of Numbers {{{2
    https://vim.fandom.com/wiki/Making_a_list_of_numbers
        :put =map(range(1,150), 'printf(''%04d'', v:val)')
        :let i=1 | g/abc/s//\='xyz_'.i/ | let i=i+1
        :let @a=1 | %s/abc/\='xyz_'.(@a+setreg('a',@a+1))/g

        A more complex version I used.  Turned each letter of 'Cheese Burger' into indidual variables.
        :let @a=1 | s/./\='end'.(@a+setreg('a', @a+1))." = \"".submatch(0)."\" "/g 

" }}}2

" Vim script for Python Developers {{{2
    https://gist.github.com/yegappan/16d964a37ead0979b05e655aa036cad0
"}}}2

" Vimscript Cheatcheat {{{2
    https://devhints.io/vimscript
"}}}2

" Ranges: Examples {{{2
    https://vim.fandom.com/wiki/Ranges
" }}}2

" Vim-Galore {{{2
    https://github.com/mhinz/vim-galore
    * add '#saner-behavior-of-n-and-n' at end for specific tip that brought me to this link
    * Great all around resource
" }}} 2

" Neovim Plugins {{{2
    https://neovimcraft.com/
" }}}2

" }}}1

For Using the Surround Plugin (straight from the README): {{{
    Press cs"' inside
        "Hello world!"
    to change it to
        'Hello world!'
    Now press cs'<q> to change it to
        <q>Hello world!</q>
    To go full circle, press cst" to get
        "Hello world!"
    To remove the delimiters entirely, press ds".
        Hello world!
    Now with the cursor on "Hello", press ysiw] (iw is a text object).
        [Hello] world!
    Let's make that braces and add some space (use } instead of { for no space): cs]{
        { Hello } world!
    Now wrap the entire line in parentheses with yssb or yss).
        ({ Hello } world!)
    Revert to the original text: ds{ds)
        Hello world!
    Emphasize hello: ysiw<em>
        <em>Hello</em> world!
    Finally, let's try out visual mode. Press a capital V (for linewise visual mode) followed by S<p class="important">.
        <p class="important">
          <em>Hello</em> world!
        </p>
" }}}

Helpful For Syntax Color Editing {{{
    :source $VIMRUNTIME/syntax/hitest.vim
        creates a file colorcoded with names

    RedirMessages(hi Search, '')
        return the hilight values for 'Search'. 
        .vim/personal/redir_messages.vim

    map <leader>h :call RedirMessages("hi " . expand("<cWORD>"),'b 4 \| exe "norm G"')<cr>:bm<cr>``
        a beaut to map a keybinding to call 'hi' on the word under the cursor, and paste output into
        the first buffer at the bottom and return to start, requires redir_messages.vim
" }}}


vimTricks: {{{
    https://vimtricks.substack.com/

    Print Substitutions:
        :g/light/#|s//heavy/g|#
        " global search for light, print the lines, replace the search, and print the lines again
}}}

" Plugins To Look At {{{1
    " Java Imports {{{2
        https://github.com/nicolascouvrat/javaimports
    " }}}2
"}}}1

" Alt key stuff {{{1
    https://vi.stackexchange.com/questions/2350/how-to-map-alt-key
" }}}1

" Article on Vim Development and maintanence {{{1
    https://github.com/LucHermitte/lh-vim-lib/blob/master/doc/design_notes.md
" }}}1

" The Bin Of Potential {{{1
Commands that I used that could be scripted further

    Used this after sorting a panda planner notes page '2021-01-12 ARK-funds notes-transcription-beta.txt'
    to add "-sorted" to the title after creating a sorted version.  Could script it for future for easier addendums.
    This create the file '2021-01-12 ARK-funds notes-transcription-beta-sorted.txt'
        exe "w ".expand("%:p:r")."-sorted.txt"

    This found ranges of notes for the different ARK funds in '2021-01-12 ARK-funds notes-transcription-beta.txt'
    and after using ':g' to pull the values out and together I sorted them, then used this command to move the blocks
    into the right order.  I would mark 'a' by hand and re-run the command to sort the notes by market price.
    This create the file '2021-01-12 ARK-funds notes-transcription-beta-sorted.txt'
        +?^A?;,/^A\|%/ m'a

"}}}1

to print out the sequence:
abcdefghijklmnopqrstuvwxyz
I ran the expression:
i_CTRL-R =join(map(range(char2nr('a'),char2nr('z')),'nr2char(v:val)'),'')

This put a list of my_list = [a, b, c, d] -> my_list = ["a", "b", "c", "d"]
:s/\(\a\)\(,\|]\)/"\1"\2/g

" Great tips for Ex commands {{{1
    " e.g. g/re/p, grevrep, and '!' commands/filtering.
    https://www.inkstonenews.com/society/big-archeology-find-home-chinas-terracotta-army/article/3122640
" }}}1

" Reference for replacing a name with clipboard and substituting. {{{1
    " renames files named like drone-4.webp to the clipboard, removing all quotation.
    " notice the second two in the regex are from the digraph.
    "   drone-4.webp -> Name of Picture by John Smith-2021dronephotocontest.webp
    nnoremap <localleader>d :DronePhotoContest<CR>
    function! DronePhotoContestFunc() abort
        let var=substitute(@+, "\\(\"\\|”\\|“\\)", "", "g")
        s/-\d\{1,2}//
        exe "norm I=var\<CR>a-2021\<ESC>eaphotocontest"
    endfunction
    command! DronePhotoContest :call DronePhotoContestFunc()
" }}}1

" Modeline{{{
" vim: set foldmarker={{{,}}} foldlevel=0 foldmethod=marker:}}}
