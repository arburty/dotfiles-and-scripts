" vimrc.local
" Austin Burt
" austin@burt.us.com

" Visual Setup
set relativenumber
colorscheme solarized8_dark_high

" ==========[ Tab Colors ]================================
" changer vertical split color
highlight VertSplit guibg=Orange guifg=Black ctermbg=9 ctermfg=0

" make actice tab green with black text
hi tablinesel ctermfg=DarkGreen ctermbg=Black

" other tabs are black w/ yellow text
hi tabline ctermfg=Black ctermbg=Yellow

" gray tab bar
hi tablinefill ctermfg=DarkGray ctermbg=White

" Mods
runtime! ftplugin/man.vim
nnoremap Q @q

" nnoremap Y y$ " already in .vimrc
nnoremap Q @@
nnoremap Y y$
" copy line to current position
" g=line number, j=line down, k=line up
nnoremap _g ggY``p
nnoremap _j jY``p
nnoremap _k kY``p

vnoremap <Esc> <Esc>gV

" Custom Leader Mappings
nnoremap <leader>s :w<cr>
inoremap <leader>s <esc>:w<cr>
 noremap <leader>q :q!<cr>

nnoremap <leader>H :bp<cr>
nnoremap <leader>L :bn<cr>
nnoremap <leader><space> :noh<cr>
nnoremap <leader>o o<Esc>
nnoremap <leader>O O<Esc>
nnoremap <leader>l "lpcit
nnoremap <leader>D oecho "" #DEBUG<esc>F"i

" Capitalize First Letter of Words
nnoremap <leader>C :s/\<./\u&/g<cr>:noh<cr>
vnoremap <leader>C :s/\%V\<./\u&/g<cr>:noh<cr>

nnoremap <leader>d :r !date "+\%m/\%d/\%y \%H:\%M"
nnoremap <leader>M :20messages<cr>
nnoremap <leader>b :set filetype=sh

" Custom Commnads
command! Vimrc :vs $MYVIMRC.local
" https://www.hillelwayne.com/post/intermediate-vim/

" Functions {{{1
" Redraw The Cursor
" to have a line cursor in insert and a block cursor in normal: added 12/27/19
if has("autocmd")
  au VimEnter,InsertLeave * silent execute '!echo -ne "\e[2 q"' | redraw!
  au InsertEnter,InsertChange *
\ if v:insertmode == 'i' |
\   silent execute '!echo -ne "\e[6 q"' | redraw! |
\ elseif v:insertmode == 'r' |
\   silent execute '!echo -ne "\e[4 q"' | redraw! |
\ endif
au VimLeave * silent execute '!echo -ne "\e[ q"' | redraw!
endif

" Inc() - Allow for Increasing numbers
""    :let i=1 | s/abc/\='xyz_'. Inc(5)/g
" Add argument (can be negative, default 1) to global variable i.
" Return value of i before the change.
function Inc(...)
  let result = g:i
  let g:i += a:0 > 0 ? a:1 : 1
  return result
endfunction
" }}}1
