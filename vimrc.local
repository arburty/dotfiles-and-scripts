" vimrc.local
" Austin Burt
" austin@burt.us.com

" Visual Setup {1
set relativenumber
colorscheme solarized8_dark_high

" Change individual colors around {2
" change identifier and DiffText to bright yellow
hi Identifier term=bold cterm=bold ctermfg=3 gui=bold guifg=#b58900
hi DiffText term=bold cterm=bold ctermfg=3 gui=bold guifg=#b58900

" change Visual to a green highlight
hi Visual term=bold ctermfg=2 ctermbg=0 guifg=#0000FF guibg=#00FF00

" a more readable red
hi DiffDelete term=standout cterm=bold ctermfg=9 gui=bold guifg=#cb4b16

" change to a readable darkblue
hi vimHiLink ctermfg=12 guifg=#839496
hi vimHiGroup ctermfg=12 guifg=#839496
" }2

" Tab Colors {2
" changer vertical split color
highlight VertSplit guibg=Orange guifg=Black ctermbg=9 ctermfg=0

" make actice tab green with black text
hi tablinesel ctermfg=DarkGreen ctermbg=Black

" other tabs are black w/ yellow text
hi tabline ctermfg=Black ctermbg=Yellow

" gray tab bar
hi tablinefill ctermfg=DarkGray ctermbg=White
" }2
" }1

" Mods {1
runtime! ftplugin/man.vim
nnoremap Q @q

" nnoremap Y y$ " already in .vimrc
nnoremap Q @@
nnoremap Y y$
" copy line to current position
" g=line number, j=line down, k=line up
nnoremap _g ggY``p
nnoremap _j jY``p
nnoremap _k kY``p

vnoremap <Esc> <Esc>gV
 noremap <leader>; q:
" }1

" Custom Leader Mappings {1
nnoremap <leader>s :w<cr>
inoremap <leader>s <esc>:w<cr>
 noremap <leader>q :q!<cr>

nnoremap <leader>H :bp<cr>
nnoremap <leader>L :bn<cr>
nnoremap <leader><space> :noh<cr>
nnoremap <silent><leader>o o<Esc>k
nnoremap <silent><leader>O O<Esc>j
nnoremap <silent>_o O<Esc>jo<Esc>k
nnoremap <leader>l "lpcit
nnoremap <leader>D oecho "" #DEBUG<esc>F"i

" Capitalize First Letter of Words
nnoremap <silent><leader>C :s/\<./\u&/g<cr>:noh<cr>``
vnoremap <silent><leader>C :s/\%V\<./\u&/g<cr>:noh<cr>``

nnoremap <leader>d :r !date "+\%m/\%d/\%y \%H:\%M"
nnoremap <leader>M :20messages<cr>
nnoremap <leader>b :set filetype=sh
" }1

" Custom Commnads {1
command! Vimrc :vs $MYVIMRC.local
command! Alias :vs ~/.config/aliases
command! Dotfiles :tabnew ~/git/dotfiles-and-scripts/ | Gstatus
" }1

" Functions {1
source ~/.vim/personal/redir_messages.vim

" Redraw The Cursor {2
" to have a line cursor in insert and a block cursor in normal: added 12/27/19
if has("autocmd")
  au VimEnter,InsertLeave * silent execute '!echo -ne "\e[2 q"' | redraw!
  au InsertEnter,InsertChange *
\ if v:insertmode == 'i' |
\   silent execute '!echo -ne "\e[6 q"' | redraw! |
\ elseif v:insertmode == 'r' |
\   silent execute '!echo -ne "\e[4 q"' | redraw! |
\ endif
au VimLeave * silent execute '!echo -ne "\e[ q"' | redraw!
endif
" }2

" Inc() - Allow for Increasing numbers {2
""    :let i=1 | s/abc/\='xyz_'. Inc(5)/g
" Add argument (can be negative, default 1) to global variable i.
" Return value of i before the change.
function Inc(...)
  let result = g:i
  let g:i += a:0 > 0 ? a:1 : 1
  return result
endfunction
" }2
" }1

" Helpful Links I Have Used {
" https://www.hillelwayne.com/post/intermediate-vim/
" }

" Modeline{
" vim: set foldmarker={,} foldlevel=0 foldmethod=marker:}
