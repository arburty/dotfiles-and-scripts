# i3 config
# Author : Austin Burt
# Email  : austin@burt.us.com
# Date   : 12-26-22
#
# {{{
# # This file has been auto-generated by i3-config-wizard(1).
# # It will not be overwritten, so edit it as you like.
# #
# # Should you change your keyboard layout some time, delete
# # this file and re-run i3-config-wizard(1).
# #
# # i3 config file (v4)
# #
# # Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# For a reference when ricing. (color, theme)
# https://itsfoss.com/i3-customization/
# scripts used:
# https://github.com/itsfoss/text-files/tree/master/i3_config_files?ref=itsfoss.com
# }}}

set $mod Mod4

exec xrandr --output DP-1 --primary --mode 2560x1440 --rate 99.95 --output HDMI-1 --mode 2560x1440 --rate 99.95 --right-of DP-1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 12

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym XF86AudioPlay exec --no-startup-id dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause #HELPFUL

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

focus_follows_mouse no

exec --no-startup-id $HOME/bin/wallpapersimplei3.sh

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec st

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
bindsym $mod+slash exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+h split h
# was 'h' but I shifted the movement keys to match vim.
# bindsym $mod+semicolon split h
bindsym $mod+Ctrl+h split h

# split in vertical orientation
bindsym $mod+Ctrl+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+Shift+f fullscreen toggle global

# change container layout (stacked, tabbed, toggle split)
workspace_layout stacking
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# ? what does this really do?
# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:st"
set $ws2 "2:browser"
set $ws3 "3:spotify"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

workspace_auto_back_and_forth yes

set $samsungmonitor DP-1
set $asusmonitor HDMI-1

bindsym $mod+F2 \
          exec xrandr --output DP-1 --primary --mode 2560x1440 --rate 99.95 --output HDMI-1 --mode 2560x1440 --rate 99.95 --left-of DP-1

bindsym $mod+F3 \
          exec xrandr --output DP-1 --primary --mode 2560x1440 --rate 99.95 --output HDMI-1 --mode 2560x1440 --rate 99.95 --right-of DP-1

workspace $ws1 output $samsungmonitor $asusmonitor
workspace $ws2 output $samsungmonitor $asusmonitor
workspace $ws5 output $samsungmonitor $asusmonitor
workspace $ws6 output $samsungmonitor $asusmonitor
workspace $ws7 output $samsungmonitor $asusmonitor
workspace $ws8 output $samsungmonitor $asusmonitor
workspace $ws9 output $samsungmonitor $asusmonitor

workspace $ws3 output $asusmonitor $samsungmonitor
workspace $ws4 output $asusmonitor $samsungmonitor
workspace $ws10 output $asusmonitor $samsungmonitor

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resizing windows.
# bindsym $mod+y resize shrink width 10 px or 10 ppt
# bindsym $mod+u resize grow height 10 px or 10 ppt
# bindsym $mod+i resize shrink height 10 px or 10 ppt
# bindsym $mod+o resize grow width 10 px or 10 ppt

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3status -c /home/$USER/.config/i3/i3status.conf
  tray_output primary

  bindsym button4 nop
  bindsym button5 nop
  bindsym $mod+button4 nop
  bindsym $mod+button5 nop

  bindsym --whole-window $mod+button5 workspace next_on_output
  bindsym --whole-window $mod+button4 workspace prev_on_output
  bindsym --whole-window Ctrl+button5 workspace HELLO

  colors {

    # OneDark theme
    set $black #282C34
    set $red   #E06C75
    set $yellow   #E5C07B
    set $blue   #61AFEF
    set $purple   #C678DD
    set $cyan   #56B6C2
    set $grey   #ABB2BF

    # Other
    set $green_forest #016E51

    # Defaults
    background #000000
    statusline #ffffff
    separator #666666

    focused_workspace  #4c7899 #285577 #ffffff
    active_workspace   #333333 $grey $black
    inactive_workspace #333333 #222222 #888888
    urgent_workspace   #2f343a #900000 #ffffff
    binding_mode       #2f343a #900000 #ffffff

    focused_background $green_forest
  }
}

bindsym $mod+b bar mode toggle

exec i3-msg "border pixel 5"

# Swap out the caps lock key for escape
exec xmodmap ~/.config/df/caps_to_esc -display $DISPLAY
## REBIND CAPS LOCK. BE CAREFUL NOT TO LOCK IT INTO CAPS LIKE I JUST DID.
bindsym $mod+F1 \
          exec xdotool key Caps_Lock \
          exec xmodmap ~/.config/df/caps_to_esc -display $DISPLAY

bindsym $mod+c exec co-pw
bindsym $mod+Shift+s exec spotify
bindsym $mod+shift+q exec qutebrowser

# this one not working
# bindsym $mod+a [class="Firefox"] focus

# Move workspace to next monitor. (aka toggle workspace's monitor)
bindsym $mod+x move workspace to output next

# Move all workspaces.
bindsym $mod+Shift+bracketright \
          workspace $ws2  ; move workspace to output $asusmonitor ;\
          workspace $ws3  ; move workspace to output $asusmonitor ;\
          workspace $ws4  ; move workspace to output $asusmonitor ;\
          workspace $ws5  ; move workspace to output $asusmonitor ;\
          workspace $ws6  ; move workspace to output $asusmonitor ;\
          workspace $ws7  ; move workspace to output $asusmonitor ;\
          workspace $ws8  ; move workspace to output $asusmonitor ;\
          workspace $ws9  ; move workspace to output $asusmonitor ;\
          workspace $ws10 ; move workspace to output $asusmonitor ;\
          workspace $ws1  ; move workspace to output $asusmonitor

bindsym $mod+Shift+bracketleft \
          workspace $ws2  ; move workspace to output $samsungmonitor ;\
          workspace $ws3  ; move workspace to output $samsungmonitor ;\
          workspace $ws4  ; move workspace to output $samsungmonitor ;\
          workspace $ws5  ; move workspace to output $samsungmonitor ;\
          workspace $ws6  ; move workspace to output $samsungmonitor ;\
          workspace $ws7  ; move workspace to output $samsungmonitor ;\
          workspace $ws8  ; move workspace to output $samsungmonitor ;\
          workspace $ws9  ; move workspace to output $samsungmonitor ;\
          workspace $ws10 ; move workspace to output $samsungmonitor ;\
          workspace $ws1  ; move workspace to output $samsungmonitor

bindsym $mod+Shift+O \
          workspace $ws9  ; move workspace to output $samsungmonitor ;\
          workspace $ws10 ; move workspace to output $asusmonitor ;\
          workspace $ws3  ; move workspace to output $asusmonitor ;\
          workspace $ws6  ; move workspace to output $samsungmonitor ;\
          workspace $ws2  ; move workspace to output $samsungmonitor ;\
          workspace $ws1  ; move workspace to output $samsungmonitor

bindsym $mod+o \
          workspace $ws3 ;\
          workspace $ws1 ;\
          workspace $ws2 





# Toggling focos of monitor
bindsym $mod+grave focus output right

# read 1 character and mark the current window with this character
bindsym $mod+m exec i3-input -F 'mark %s' -l 1 -P 'Mark: '

# read 1 character and go to the window with the character
bindsym $mod+g exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '

bindsym $mod+Shift+End exec shutdown -r now

bindsym $mod+Shift+Ctrl+l exec lock_screen

bindsym --release $mod+ctrl+0 \
          workspace number $ws6 ;\
          workspace number $ws6 ;\
          workspace number $ws10 ;\
          exec --no-startup-id xdotool key --clearmodifiers ctrl+x 0

mode "move_mouse" {
        # Click 
        bindsym space exec xdotool mousemove_relative 0 0 click 1

        # small movements
        bindsym h exec xdotool mousemove_relative --polar 270 15
        bindsym j exec xdotool mousemove_relative --polar 180 15
        bindsym k exec xdotool mousemove_relative --polar 0 15
        bindsym l exec xdotool mousemove_relative --polar 90 15
        bindsym a exec xdotool mousemove_relative --polar 270 15
        bindsym s exec xdotool mousemove_relative --polar 180 15
        bindsym w exec xdotool mousemove_relative --polar 0 15
        bindsym d exec xdotool mousemove_relative --polar 90 15

        # Diagonals
        bindsym $mod+h exec xdotool mousemove_relative --polar 225 15
        bindsym $mod+j exec xdotool mousemove_relative --polar 135 15
        bindsym $mod+k exec xdotool mousemove_relative --polar 305 15
        bindsym $mod+l exec xdotool mousemove_relative --polar 45 15

        bindsym shift+k exec xdotool mousemove_relative --polar 0 40
        bindsym shift+j exec xdotool mousemove_relative --polar 180 40
        bindsym shift+h exec xdotool mousemove_relative --polar 270 40
        bindsym shift+l exec xdotool mousemove_relative --polar 90 40

        # Clear notification button
        bindsym $mod+n exec xdotool mousemove --screen 0 2520 10 click 1

        # Top Left
        bindsym u exec xdotool mousemove 10 10
        bindsym shift+u exec xdotool mousemove 2570 10
        # Bottom Left
        bindsym m exec xdotool mousemove 23 1426
        bindsym shift+m exec xdotool mousemove 2583 1426
        # Bottom Right
        bindsym period exec xdotool mousemove 2526 1426
        bindsym shift+period exec xdotool mousemove 5086 1426
        # Top Right
        bindsym o exec xdotool mousemove 2520 10
        bindsym 0 exec xdotool mousemove 2520 10
        bindsym shift+o exec xdotool mousemove 5080 10
        bindsym shift+0 exec xdotool mousemove 5080 10

        # Center
        bindsym c exec xdotool mousemove 1280 720
        bindsym $mod+c exec xdotool mousemove 3840 720
        bindsym shift+c exec xdotool mousemove 3840 720

        # Switch screens, same location.
        bindsym semicolon exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((X + $WIDTH) % ($WIDTH*2)))" "$Y"

        # Left Screen, 9 sections within the screen.
        bindsym 1 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((WIDTH/4))" "$((HEIGHT/4))"
        bindsym 2 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)*2))" "$((HEIGHT/4))"
        bindsym 3 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)*3))" "$((HEIGHT/4))"
        bindsym 4 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((WIDTH/4))" "$(((HEIGHT/4)*2))"
        bindsym 5 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)*2))" "$(((HEIGHT/4)*2))"
        bindsym 6 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)*3))" "$(((HEIGHT/4)*2))"
        bindsym 7 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((WIDTH/4))" "$(((HEIGHT/4)*3))"
        bindsym 8 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)*2))" "$(((HEIGHT/4)*3))"
        bindsym 9 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)*3))" "$(((HEIGHT/4)*3))"
        #bindsym 0 mapped to Top Right

        # Right Screen, 9 sections within the screen.
        bindsym shift+1 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)+$WIDTH))" "$((HEIGHT/4))"
        bindsym shift+2 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((((WIDTH/4)*2)+$WIDTH))" "$((HEIGHT/4))"
        bindsym shift+3 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((((WIDTH/4)*3)+$WIDTH))" "$((HEIGHT/4))"
        bindsym shift+4 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)+$WIDTH))" "$(((HEIGHT/4)*2))"
        bindsym shift+5 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((((WIDTH/4)*2)+$WIDTH))" "$(((HEIGHT/4)*2))"
        bindsym shift+6 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((((WIDTH/4)*3)+$WIDTH))" "$(((HEIGHT/4)*2))"
        bindsym shift+7 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$(((WIDTH/4)+$WIDTH))" "$(((HEIGHT/4)*3))"
        bindsym shift+8 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((((WIDTH/4)*2)+$WIDTH))" "$(((HEIGHT/4)*3))"
        bindsym shift+9 exec eval $(xdotool getdisplaygeometry --shell getmouselocation --shell) \
                      && xdotool mousemove "$((((WIDTH/4)*3)+$WIDTH))" "$(((HEIGHT/4)*3))"

        # spotify pause
        bindsym $mod+s workspace number $ws3 ;\
            exec xdotool mousemove --sync 3852 1328 click 1

        # spotify devices to phone
        bindsym $mod+shift+p workspace number $ws3 ;\
            exec xdotool mousemove --sync 4843 1350 click 1 mousemove --sync 4716 1161

        # spotify devices to computer
        bindsym $mod+shift+c workspace number $ws3 \
            exec xdotool mousemove --sync 4850 1315 click 1 mousemove --sync 4717 971


        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym ctrl+c mode "default"

}

bindsym $mod+shift+m mode "move_mouse"

bindsym $mod+shift+i exec --no-startup-id "xcalib -invert -alter"

include $HOME/SD2T/Backup/shared/laptop-backup/.sysctl/bin/i3/*.conf 

# open shit up
exec --no-startup-id "i3-msg 'workspace tmp'"
exec --no-startup-id "i3-msg 'workspace 1:st; append_layout /home/vladislav/.config/i3/workspace-1.json'"
exec --no-startup-id "i3-msg 'workspace 2:browser; append_layout /home/vladislav/.config/i3/workspace-2.json'"
exec --no-startup-id "i3-msg 'workspace 3:spotify; append_layout /home/vladislav/.config/i3/workspace-3.json'"

exec --no-startup-id st -n "primary" -t "zsh" -e "zsh" -c "tmstart -w"

exec --no-startup-id qutebrowser
exec --no-startup-id firefox
exec --no-startup-id spotify

