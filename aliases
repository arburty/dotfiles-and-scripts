# Aliases
# Austin Burt
# austin@burt.us.com

# Functions {{{1
gbye() { . gbye $@; }
dif() { diff $1 $2 2>/dev/null; [[ $? -eq 2 ]] && git diff; }
clmns() { columns.sh $COLUMNS;  }
# kill port $1
kp() { if [[ -z $1 ]]; then echo "${RED}Needs a port #${NC}"; else
    lsof -ti :$1 | xargs kill -9 && echo "${GREEN}Murderer!! You have killed port $1!${NC}"; fi; }
sudothis() { echo "${GREEN}====== $* ======${NC}" && sudo $* && echo "${GREEN}====== $* SUCCESS ======${NC}" && return 0 || echo "${RED}====== $* NO SUCCESS =====${NC}" && return 1;  }
autoupgradeos() { sudothis apt clean && sudothis apt update -m && sudothis dpkg --configure -a && sudothis apt install -f && sudothis apt dist-upgrade && sudothis apt autoremove --purge ;}

autoupgradeos() {
    # Probably best to do the install manually.
    # Can help when needed though, and can be used
    # as documentation for possible steps.
    sudothis apt clean &&
    sudothis apt update -m &&
    sudothis dpkg --configure -a &&
    sudothis apt install -f &&
    sudothis apt dist-upgrade &&
    sudothis apt autoremove --purge &&
    sudothis apt update &&
    sudothis apt full-upgrade
    # next line is deprecated I think
    #sudothis pop-upgrade release upgrade
}

# Markdown command {{{2
#removeMD() { which md >>/dev/null;[[ $? -eq 0 ]] && echo true; }
#[[ $SHELL == "/bin/zsh" ]] && [[ $(removeMD) == "true" ]] && unalias md
markd() { pandoc ${@:-$HOME/.helpful_commands.md} | lynx -vikeys -stdin && clear; }
# }}}2
# }}}1

# Alias's {{{1
alias cl='clear'
alias man='viman'
alias bd='. bd -si'
alias fortune='fortune | tee -a ~/.fortuneCookies && echo "" >> ~/.fortuneCookies'
alias exer="exercism"
alias exersub="exercism submit src/main/java/*.java"
alias fzf='fzf -m --cycle --reverse'
alias say="espeak"
alias alldone="say 'The task has been completed master. May I have another'"
alias ifailed="say 'I have failed you. Please have mercy on my kernel.'"
alias sai='sudo apt install'
alias saiy='sudo apt install -y'
saiyd() { saiy "$@" && alldone || ifailed }
alias copy='xclip -selection clip'   # shorter
alias pbcopy='xclip -selection clip' # what im used to
alias rainclear="unclear | rainbow"
alias wow="echo such color. much impress. very dork > /tmp/wowfile | say | rainbow /tmp/wowfile"
alias rr='mpv "https://youtu.be/dQw4w9WgXcQ"'
alias lynx="lynx -accept_all_cookies -vikeys"
alias nv='nordvpn'
alias mutt='neomutt'
alias nmutt='neomutt'
alias kill_wallp="ps -e | awk '/wallpaper|sleep/ {print \$1}' | xargs kill -9"
alias mntgd='rclone mount GDrive: ~/cloud_storage/Google_Drive/'
alias syncfromgd='rclone sync -P GDrive: ~/cloud_storage/Google_Drive-local/'
alias syncfromRB='rclone sync -P GDrive:RocketBook/Panda_Planner/ ~/cloud_storage/Google_Drive-local/RocketBook/Panda_Planner/'
alias synctoRB='rclone sync -PL ~/cloud_storage/Google_Drive-local/RocketBook/Panda_Planner/ GDrive:RocketBook/Panda_Planner/'
alias synctoPy='rclone sync -PL ~/python/ GDriveCSU:python/'
alias synctoPy='rclone sync -PL --exclude .git/ --exclude musicfiles/music/ ~/python/ GDriveCSU:python'
alias syncfromPy='rclone sync -PL GDriveCSU:python/ ~/python/'
alias synctogd='rclone sync -PL ~/cloud_storage/Google_Drive-local/ GDrive:'
alias urlviewLinks='urlview ~/cloud_storage/Google_Drive-local/Links.txt'
alias muttrgx='less ~/notes/mutt_regex'
alias tmkmutt='tmux kill-window -t mutt'
alias tuxispeak='tuxi $(echo "" | dmenu -p "what is ur ?") | tee >/dev/stderr | espeak'
alias sql='sqlite3'
alias muttbackup='rsync -av --progress ~/.mutt/ ~/usb/mutt/ --exclude=cache --backup --backup-dir=BACKUPDIR'

# Vim related alias's {{{2
VEDITOR='nvim'
alias v='$VEDITOR'
alias vz='$VEDITOR $HOME/.zshrc'
alias vb='$VEDITOR $HOME/.bashrc'
alias vh='$VEDITOR $HOME/.helpful_commands.md'
alias vv='$VEDITOR $HOME/.vimrc'
alias va='$VEDITOR $HOME/.config/aliases'
alias vt='$VEDITOR $HOME/todo.html'
alias vq='$VEDITOR $HOME/.config/qutebrowser/config.py'
alias cs='$VEDITOR -c "let @*=@+|q"'
alias vL='$VEDITOR $HOME/cloud_storage/Google_Drive-local/Links.txt'
# function to open vim with Gitstatus open
vst()  { $VEDITOR +'exe "norm ,gs" | exe "norm \<c-w>L\<c-w>h"' $@ }
vstd() { $VEDITOR +'exe "norm ,gs" | exe "norm \<c-w>L\<c-w>h"' $HOME/git/dotfiles-and-scripts/ }

# }}}2

# firefox {{{2
fireryfoxes() {
    ( firefox "$@" > /dev/null 2>&1 & )
}
alias ff="fireryfoxes"
alias maps="fireryfoxes google.com/maps"
alias ffs="fireryfoxes -search"
alias ffw="fireryfoxes -new-window"
alias ffws="fireryfoxes -new-window -search"
alias fft="fireryfoxes -new-tab"
alias ffts="fireryfoxes -new-tab -search"
alias ffp=" fireryfoxes -private-window"
# }}}2

# qutebrowser {{{2
callQutebrowser() {
    ( qutebrowser "$@" > /dev/null 2>&1 & )
}

alias qb='callQutebrowser'
# }}}2
# }}}1

# Modeline{{{
# vim: set foldmarker={{{,}}} foldlevel=0 foldmethod=marker ft=sh:}}}
return 0
