#! /bin/bash

# Author: Austin Burt
# Email: austin@burt.us.com
# Date:5/23/19

# Setup for needed variables
declare -r mybr=$(git mybr)
declare -r branchnames="$HOME/git/branchnames"
output=$(mktemp /tmp/$PROGRAM.XXX) # more portable

branches=$(git branch)

findLongestName() {
    let local longest=-1
    while read name
    do
        if [[ ${#name} -gt $longest ]]; then
            longest=${#name}
        fi
    done < <(echo "$branches")
    echo $longest
}
let longestName=$(findLongestName)
let columns=$(tput cols)-$longestName-7 # there are 6 spaces and a '|' before the description
# End Setup

printName() {
    isCurrBranch=$(echo "$line" | grep "$mybr")
    if [[ ! -z $isCurrBranch ]]
    then
        echo -n "$line"
        line=$(echo "$line" | cut -d " " -f2)
    else
        echo -n "  $line"
    fi
}

printDescription() {
    [[ -f $branchnames ]] || echo "" >> $branchnames # Create the file if currently nonexistent

    description=$(cat $branchnames | grep "$line" | tail -n 1 | cut -d " " -f 2-)
    if [[ $line != "master" ]]
    then
        # the '@' are used to delimit the column command
        echo "@|@${description::columns}"
    else
        echo
    fi
}

main() {
    while read line
    do
        printName >> "$output"
        printDescription >> "$output"
    done < <(echo "$branches")

    column -t -s'@' "$output"
    rm "$output" # cleanup
}

main
exit 0
