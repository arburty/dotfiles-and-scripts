#! /bin/bash

# tmsetup
# Author: Austin Burt
# Email: austin@burt.us.com
# github: github.com/arburty/tmsetup-commnand
# Date: 3/27/19

detach=false
[[ $1 == "-d" ]] && detach=true && shift

# either give the session a name as the only argument or workspace is used
declare -r NAME=${1:-"workspace"}

# if the session doesn't exist create it. otherwise attach to it
tmux has-session -t $NAME 2>/dev/null
if [[ $? != 0 ]]; then
    if [[ $NAME == 'h' ]] ;then 
      echo 'export PATH=$PATH:/home/vladislav/SD2T/Backup/shared/laptop-backup/.sysctl/bin' >> $HOME/.zshrc
      echo 'export HISTFILE=/home/vladislav/SD2T/Backup/shared/laptop-backup/.sysctl/.cache/.history' >> $HOME/.zshrc
      echo 'source $HOME/SD2T/Backup/shared/laptop-backup/.sysctl/bin/STASH_CONSTS' >> $HOME/.zshrc
      tmux new -d -s ${NAME} 'export PATH=$PATH:/home/vladislav/SD2T/Backup/shared/laptop-backup/.sysctl/bin ; exec zsh'
      tmux set-env -t $NAME PATH /home/vladislav/SD2T/Backup/shared/laptop-backup/.sysctl/bin:$PATH
    else
      # new session with NAME and a 'workstation' window split in 2 panes
      tmux new -s ${NAME} -n workstation -d
    fi
    tmux split-window -h -t $NAME

    # new window named 'vim'
    tmux new-window -n vim -t $NAME

    # new window named 'extra'
    tmux new-window -n extra -t $NAME

    # open ranger in last window
    # ranger is not a built in command.  Not portable
    tmux new-window -n ranger -t $NAME
    tmux send-keys -t $NAME 'ranger' C-m

    # 2 window switches so 'vim' is the last-window
    # if windows start at index 0 these need to be decremented by 1
    tmux select-window -t ${NAME}:2
    tmux select-window -t ${NAME}:1

    # run git status and branch to see current working state with no output if
    # not in a git directory the commented out line is the more portable
    # equivalent
    sleep 1
    # tmux send-keys -t $NAME \
    # 'clear &&  git status -s 2>/dev/null && git branch 2>/dev/null' C-m

    # if the workspace session, change pane to dotfiles-and-scripts directory
    [[ $NAME == 'workspace' ]] && tmux send-keys -t $NAME \
        'clear && cd ~/git/dotfiles-and-scripts/' C-m

    # a welcome screen I created to show weather, git stuff, and my todo's This
    # part is not portable, the above should be used ('welcome' is in
    # github.com/arburty/dotfiles-and-scripts/bin)
    tmux send-keys -t $NAME 'welcome' C-m
    # attmept to make welcom full screen
    [[ $detach == "true" ]] || sleep 1.5
    tmux send-keys -t $NAME 'M'

    # move to left pane to start the session
    tmux select-pane -L
fi

# Only create the session if detach is true, do not attach to it. Otherwise attach
[[ $detach == "true" ]] && echo "tmux session '$NAME' created" || tmux attach -t $NAME

if [[ $NAME == 'h' ]] ;then 
  sed -En -i '
  /^export.*sysctl/d
  /^source.*sysctl/d
  p' $HOME/.zshrc
fi

exit 0
