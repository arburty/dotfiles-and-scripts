#!/bin/bash

# Your headphones name (or keyword)
# and another device you want switch to (or keyword)
#
# You can find these names (or keywords) by running this command:
#    wpctl status | grep -A3 -m 1 Sinks | tail -n 3 |
#
#	EXAMPLE:
#	headphonesName=HyperX
# 	anotherDevice=HDMI

headphonesName="Arctis Pro Wireless Game"
anotherDevice="Family 17h"

# Opted to use only sed.  THis was the previous command using more pipes.
# local device    =`wpctl status | grep -A 5 -m 1 Sinks | tail -n 5 | grep "$anotherDevice" | grep -oP '^[^0-9]*\K[0-9]+'`
#   sed command:
#    finds lines between Sinks and the next "empty" line
#    quits on "empty" line. Done processing
#    searches the given pattern
#    returns the index
find_device() {
  local find="$@"
  wpctl status \
    | sed -E -n '
      /Sinks:/,/^\s.\s*$/ { 
        /^\s.\s*$/q
        /'"$find"'/ { 
          s/^[[:space:]â”‚*]+([[:digit:]]+)\..*/\1/ 
          p
        }
      }'
}

# Getting headphones sink id
# Getting another device sink id
device=$(find_device "$anotherDevice")
headphones=$(find_device "$headphonesName")

echo "device = $device"
echo "headphones = $headphones"


if [[ "$(wpctl status | grep -A 5 -m 1 Sinks | tail -n 5 | grep "\*")" = *"$headphonesName"* ]]; then	
	let nonActive="$device"
	nonActiveName="$anotherDevice"
	nonActiveIcon="speaker"
else
	let nonActive="$headphones"
	nonActiveName="$headphonesName"
	nonActiveIcon="headphones"
fi

# Changing output  	
wpctl set-default "$nonActive" &&

# Sending notification (comment the line below if you don`t want notifications)
notify-send.sh "Audio output" "Switched to $nonActiveName" -u low --icon="$nonActiveIcon"

