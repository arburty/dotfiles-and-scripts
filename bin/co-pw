#!/bin/bash

headphonesName="Arctis Pro Wireless Game"
headphonesName="HyperX Virtual Surround Sound Digital Stereo"
speakerName="Family 17h"

# Opted to use only sed.  This was the previous command using more pipes. less accurate fetching of all ids.
# local device    =`wpctl status | grep -A 5 -m 1 Sinks | tail -n 5 | grep "$speakerName" | grep -oP '^[^0-9]*\K[0-9]+'`
#   sed command:
#    finds lines between Sinks and the next "empty" line
#    quits on "empty" line. Done processing
#    searches the given pattern
#    returns the index
find_device() {
  local find="$@"
  wpctl status \
    | sed -E -n '
      /Sinks:/,/^\s.\s*$/ { 
        /^\s.\s*$/q
        /'"$find"'/ { 
          s/^[[:space:]â”‚*]+([[:digit:]]+)\..*/\1/ 
          p
        }
      }'
}

# Getting sink ids
headphones=$(find_device "$headphonesName")
speakerBar=$(find_device "$speakerName")

echo "speakerBar = $speakerBar"
echo "headphones = $headphones"


if [[ "$(wpctl status | grep -A 5 -m 1 Sinks | tail -n 5 | grep "\*")" = *"$headphonesName"* ]]; then	
	let nonActive="$speakerBar"
	nonActiveName="$speakerName"
else
	let nonActive="$headphones"
	nonActiveName="$headphonesName"
fi
icon=$HOME/shared_drive/Pictures/Me/Matt-and-I-Ren-Fair.jpg

# Changing output  	
wpctl set-default "$nonActive" &&

# Sending notification (comment the line below if you don`t want notifications)
notify-send -t 100 "Audio output" "Switched to $nonActiveName" --icon="$icon"

exit 0

